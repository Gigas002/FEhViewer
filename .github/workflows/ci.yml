name: Build

on:
  push:
    branches: ["ci-test"]
  pull_request:
    branches: ["ci-test"]

jobs:
  ios-build-only:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Install flutter
        uses: subosito/flutter-action@v2.6.1
        with:
        # The Flutter version to make available on the path
        #flutter-version: # optional, default is any
        # The Flutter build release channel
        # Beta is required for --no-codesign on iOS build to work properly. Can be commented after flutter 3.1.0 release
          channel: beta # optional, default is stable

      - name: Prepare
        # Renaming config files, as README suggests
        run: |
          rm lib/config/config.dart
          mv lib/config/config.dart.sample lib/config/config.dart

        # Register PATH variables 
          cd scripts/
          export scripts_path=`pwd`
          export release_bundle_identifier='cn.honjow.fehv'
          export dev_bundle_identifier='dev2.cn.honjow.fehv'
          export pub_output_path="$HOME/Public/fehv";
          export macos_archiver_path="${scripts_path}/../build/macos/Build/Products/Release/fehviewer.app";
          export ios_archiver_path="${scripts_path}/../build/ios/archive/fehviewer.xcarchive/Products/Applications/FEhViewer.app"
          export ipa_plist_path="${ios_archiver_path}/Info.plist"
          export version=`perl version.pl`

        # flutter pre-build work
          cd ../ios/
          flutter clean
          flutter pub get
          pod update
          pod install
      - name: Build
        run: |
          flutter build ipa --release --no-codesign

        # Following commands fails to execute, so unable to deploy through CI. Fixable?

        #  sh scripts/reid.sh
        #  sh scripts/zip.sh $version
        #  sh scripts/dsym.sh
        
      # Example of artifact deployment
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     # Artifact name
      #     name: # optional, default is artifact
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path:
  macos-build-only:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Install flutter
        uses: subosito/flutter-action@v2.6.1
        #with:
        # The Flutter version to make available on the path
        #flutter-version: # optional, default is any
        # The Flutter build release channel
        #  channel: # optional, default is stable

      - name: Prepare
        # Renaming config files, as README suggests
        run: |
          rm lib/config/config.dart
          mv lib/config/config.dart.sample lib/config/config.dart

        # Register PATH variables 
          cd scripts/
          export scripts_path=`pwd`
          export release_bundle_identifier='cn.honjow.fehv'
          export dev_bundle_identifier='dev2.cn.honjow.fehv'
          export pub_output_path="$HOME/Public/fehv";
          export macos_archiver_path="${scripts_path}/../build/macos/Build/Products/Release/fehviewer.app";
          export version=`perl version.pl`

        # flutter pre-build work
          cd ../macos/
          flutter clean
          flutter pub get
          pod update
          pod install
      - name: Build
        run: |
          flutter build macos --release

        # TODO: test this
          echo "macos build ended"
          sh scripts/dmg.sh $version
        
      # Example of artifact deployment
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     # Artifact name
      #     name: # optional, default is artifact
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path:
  windows-build-only:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Install flutter
        uses: subosito/flutter-action@v2.6.1
        #with:
        # The Flutter version to make available on the path
        #flutter-version: # optional, default is any
        # The Flutter build release channel
        #  channel: # optional, default is stable

      - name: Prepare
        # Renaming config files, as README suggests
        run: |
          rm lib/config/config.dart
          mv lib/config/config.dart.sample lib/config/config.dart

      - name: Build
        run: |
          flutter build windows --release

        # TODO: test this
          echo "windows build ended"
          sh scripts/win_comp.bat
        
      # Example of artifact deployment
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     # Artifact name
      #     name: # optional, default is artifact
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path:
  android-build-only:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Setup Java JDK
        uses: actions/setup-java@v3.4.1
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          # Look here for gradle compatibility: https://docs.gradle.org/current/userguide/compatibility.html
          # Currently used gradle version is written in android/build.gradle
          java-version: "16.x"
          # Java distribution. See the list of supported distributions in README file
          distribution: temurin
          cache: gradle # optional

      - name: Install flutter
        uses: subosito/flutter-action@v2.6.1
        #with:
        # The Flutter version to make available on the path
        #flutter-version: # optional, default is any
        # The Flutter build release channel
        #  channel: # optional, default is stable

      - name: Prepare
        # Renaming config files, as README suggests
        run: |
          rm lib/config/config.dart
          mv lib/config/config.dart.sample lib/config/config.dart
        
        # Register PATH variables 
          cd scripts/
          export scripts_path=`pwd`
          export release_bundle_identifier='cn.honjow.fehv'
          export dev_bundle_identifier='dev2.cn.honjow.fehv'
          export pub_output_path="$HOME/Public/fehv";
          export apk_build_path="${scripts_path}/../build/app/outputs/apk/release/";
          export apk_build_path_universal="${scripts_path}/../build/app/outputs/apk/releaseUniversal/";
          export version=`perl version.pl`
          cd ../
      - name: Build
        run: |
          echo $apk_build_path
          echo $apk_build_path_universal

        # TODO: make at least this work
          flutter build apk
        #  cp -R $apk_build_path $apk_build_path_universal
        #  flutter build apk --split-per-abi
        #  cp $apk_build_path_universal/*.apk $apk_build_path/*

      # Example of artifact deployment
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     # Artifact name
      #     name: # optional, default is artifact
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path:
  test:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Install flutter
        uses: subosito/flutter-action@v2.6.1
        #with:
        # The Flutter version to make available on the path
        #flutter-version: # optional, default is any
        # The Flutter build release channel
        #  channel: # optional, default is stable

      - name: Prepare
        # Renaming config files, as README suggests
        run: |
          rm lib/config/config.dart
          mv lib/config/config.dart.sample lib/config/config.dart

        # Register PATH variables 
          cd scripts/
          export scripts_path=`pwd`
          export release_bundle_identifier='cn.honjow.fehv'
          export dev_bundle_identifier='dev2.cn.honjow.fehv'
          export pub_output_path="$HOME/Public/fehv";
          export macos_archiver_path="${scripts_path}/../build/macos/Build/Products/Release/fehviewer.app";
          export version=`perl version.pl`
      - name: Build
        run: |
          flutter test
