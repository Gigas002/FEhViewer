name: Build

on:
  push:
    branches: ["ci-test"]
  pull_request:
    branches: ["ci-test"]

jobs:
  # ios-build:
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@v3.0.2

  #     - name: Install flutter
  #       uses: subosito/flutter-action@v2.6.1
  #       with:
  #       # Beta is required for --no-codesign on iOS build to work properly. Can be commented after flutter 3.1.0 release
  #         channel: beta # optional, default is stable

  #     - name: Prepare
  #       run: |
  #         rm lib/config/config.dart
  #         mv lib/config/config.dart.sample lib/config/config.dart

  #         cd ios/
  #         flutter clean
  #         flutter pub get
  #         pod update
  #         pod install
  #     - name: Build
  #       run: |
  #         cd scripts/ && source para.sh && cd ../

  #         flutter build ipa --release --no-codesign

  #       # Following commands fails to execute, so unable to deploy through CI. Fixable?

  #       #  sh scripts/reid.sh
  #       #  sh scripts/zip.sh $version
  #       #  sh scripts/dsym.sh
        
  #     # Deploy artifacts
  #     # - name: Upload a Build Artifact
  #     #   uses: actions/upload-artifact@v3.1.0
  #     #   with:
  #     #     # Artifact name
  #     #     name: 'ios' # optional, default is artifact
  #     #     # A file, directory or wildcard pattern that describes what to upload
  #     #     path: 'build/Payload.ipa'
  # macos-build:
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@v3.0.2

  #     - name: Install flutter
  #       uses: subosito/flutter-action@v2.6.1

  #     - name: Prepare
  #       run: |
  #         rm lib/config/config.dart
  #         mv lib/config/config.dart.sample lib/config/config.dart

  #         cd macos/
  #         flutter clean
  #         flutter pub get
  #         pod update
  #         pod install
  #     - name: Build
  #       run: |
  #         cd scripts/ && source para.sh && cd ../

  #         flutter build macos --release
  #         sh scripts/dmg.sh $version

  #         sh scripts/pack_macos.sh
        
  #     # Deploy artifacts
  #     - name: Upload a Build Artifact
  #       uses: actions/upload-artifact@v3.1.0
  #       with:
  #         # Artifact name
  #         name: 'macos' # optional, default is artifact
  #         # A file, directory or wildcard pattern that describes what to upload
  #         path: 'build/macos.zip'
  # windows-build:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3.0.2

  #     - name: Install flutter
  #       uses: subosito/flutter-action@v2.6.1

  #     - name: Prepare
  #       run: |
  #         rm lib/config/config.dart
  #         mv lib/config/config.dart.sample lib/config/config.dart
  #     - name: Build
  #       run: |
  #         scripts/build_win.bat
  #         scripts/pack_win.bat
        
  #     # Deploy artifacts
  #     - name: Upload a Build Artifact
  #       uses: actions/upload-artifact@v3.1.0
  #       with:
  #         # Artifact name
  #         name: 'windows' # optional, default is artifact
  #         # A file, directory or wildcard pattern that describes what to upload
  #         path: 'build/windows.zip'
  # android-build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3.0.2

  #     - name: Setup Java JDK
  #       uses: actions/setup-java@v3.4.1
  #       with:
  #         # Look here for gradle compatibility: https://docs.gradle.org/current/userguide/compatibility.html
  #         # Currently used gradle version is written in android/build.gradle
  #         java-version: "16.x"
  #         distribution: temurin
  #         cache: gradle # optional

  #     - name: Install flutter
  #       uses: subosito/flutter-action@v2.6.1

  #     - name: Prepare
  #       run: |
  #         rm lib/config/config.dart
  #         mv lib/config/config.dart.sample lib/config/config.dart
  #     - name: Build
  #       run: |
  #         cd scripts/ && source para.sh && cd ../

  #         flutter build apk
  #     #  cp -R $apk_build_path $apk_build_path_universal
  #     #  flutter build apk --split-per-abi
  #     #  cp $apk_build_path_universal/*.apk $apk_build_path/*

  #     # Deploy artifacts
  #     # - name: Upload a Build Artifact
  #     #   uses: actions/upload-artifact@v3.1.0
  #     #   with:
  #     #     # Artifact name
  #     #     name: 'android' # optional, default is artifact
  #     #     # A file, directory or wildcard pattern that describes what to upload
  #     #     path: 'build/Payload.apk'
  android-build-win:
    runs-on: wibdows-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Setup Java JDK
        uses: actions/setup-java@v3.4.1
        with:
          # Look here for gradle compatibility: https://docs.gradle.org/current/userguide/compatibility.html
          # Currently used gradle version is written in android/build.gradle
          java-version: "16.x"
          distribution: temurin
          cache: gradle # optional

      - name: Install flutter
        uses: subosito/flutter-action@v2.6.1

      - name: Prepare
        run: |
          rm lib/config/config.dart
          mv lib/config/config.dart.sample lib/config/config.dart
      - name: Build
        run: |
          flutter build apk
      #  cp -R $apk_build_path $apk_build_path_universal
      #  flutter build apk --split-per-abi
      #  cp $apk_build_path_universal/*.apk $apk_build_path/*

      # Deploy artifacts
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     # Artifact name
      #     name: 'android' # optional, default is artifact
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path: 'build/Payload.apk'
  # test:
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@v3.0.2

  #     - name: Install flutter
  #       uses: subosito/flutter-action@v2.6.1

  #     - name: Prepare
  #       run: |
  #         rm lib/config/config.dart
  #         mv lib/config/config.dart.sample lib/config/config.dart
  #     - name: Test
  #       run: |
  #         cd scripts/ && source para.sh && cd ../

  #         flutter test
